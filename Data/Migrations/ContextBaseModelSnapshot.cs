// <auto-generated />
using System;
using AdventureWorks.Data.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AdventureWorks.Data.Migrations
{
    [DbContext(typeof(ContextBase))]
    partial class ContextBaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AdventureWorks.Domain.Entities.Competitor", b =>
                {
                    b.Property<int>("IdCompetitor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("AverageTemperature")
                        .HasColumnType("double precision");

                    b.Property<char>("Gender")
                        .HasColumnType("character(1)");

                    b.Property<double>("Height")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("IdCompetitor");

                    b.ToTable("Competitors");
                });

            modelBuilder.Entity("AdventureWorks.Domain.Entities.RaceHistory", b =>
                {
                    b.Property<int>("IdRaceHistory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("IdCompetitor")
                        .HasColumnType("integer");

                    b.Property<int>("IdRaceTrack")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RaceDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("TimeSpent")
                        .HasColumnType("double precision");

                    b.HasKey("IdRaceHistory");

                    b.ToTable("RaceHistory");
                });

            modelBuilder.Entity("AdventureWorks.Domain.Entities.RaceTrack", b =>
                {
                    b.Property<int>("IdRaceTrack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdRaceTrack");

                    b.ToTable("RaceTrack");
                });
#pragma warning restore 612, 618
        }
    }
}
